{"version":3,"sources":["webpack:///./src/components/exam/TakeExam.vue?7358","webpack:///src/components/exam/TakeExam.vue","webpack:///./src/components/exam/TakeExam.vue?5245","webpack:///./src/components/exam/TakeExam.vue","webpack:///./node_modules/core-js/modules/web.dom-collections.for-each.js","webpack:///./node_modules/core-js/internals/array-for-each.js","webpack:///./src/service/axios.js","webpack:///./node_modules/core-js/modules/es.array.for-each.js","webpack:///./src/service/admin.js","webpack:///./src/components/exam/TakeExam.vue?ab3e","webpack:///./node_modules/core-js/modules/es.array.join.js","webpack:///./node_modules/core-js/modules/es.array.map.js","webpack:///./src/service/stat.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","directives","name","rawName","value","expression","staticClass","_v","_s","examInfo","title","desc","attrs","paperAuthorLink","author","_l","JSON","parse","tags","tag","key","_e","_m","views","staticStyle","score","sharingTitle","questionList","length","question","index","type","model","userAnswers","id","callback","$$v","$set","options","option","class","isCorrectAnswerClass","isWrongAnswerClass","isSubmitted","String","fromCharCode","getQAuthorLink","createUserId","createUser","undefined","eachCorrectiveness","userAnswerDisplayString","correctAnswers","map","each","join","whyami","loading","on","preSubmitPaper","edit","$event","check","staticRenderFns","component","global","DOMIterables","forEach","createNonEnumerableProperty","COLLECTION_NAME","Collection","CollectionPrototype","prototype","error","$forEach","arrayMethodIsStrict","arrayMethodUsesToLength","STRICT_METHOD","USES_TO_LENGTH","module","exports","callbackfn","arguments","$next","axios","create","baseURL","__server","withCredentials","__next","$","target","proto","forced","API","checkQuestion","action","put","params","checkPaper","IndexedObject","toIndexedObject","nativeJoin","ES3_STRINGS","Object","separator","call","$map","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","actions","postStat","get"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,WAAW,CAAC,CAACC,KAAK,UAAUC,QAAQ,YAAYC,MAAOT,EAAW,QAAEU,WAAW,YAAYC,YAAY,eAAe,CAACP,EAAG,MAAM,CAACO,YAAY,oBAAoB,CAACP,EAAG,MAAM,CAACO,YAAY,qBAAqB,CAACP,EAAG,KAAK,CAACJ,EAAIY,GAAG,KAAKZ,EAAIa,GAAGb,EAAIc,SAAWd,EAAIc,SAASC,MAAQ,MAAM,UAAWf,EAAY,SAAEI,EAAG,MAAM,CAACO,YAAY,oBAAoB,CAACP,EAAG,KAAK,CAACJ,EAAIY,GAAGZ,EAAIa,GAAGb,EAAIc,SAASE,SAASZ,EAAG,IAAI,CAACO,YAAY,uBAAuB,CAACP,EAAG,OAAO,CAACO,YAAY,oBAAoB,CAACX,EAAIY,GAAG,UAAUR,EAAG,OAAO,CAACO,YAAY,qBAAqB,CAACP,EAAG,UAAU,CAACa,MAAM,CAAC,KAAOjB,EAAIkB,gBAAgB,OAAS,SAAS,WAAY,IAAQ,CAAClB,EAAIY,GAAG,IAAIZ,EAAIa,GAAGb,EAAIc,SAASK,QAAQ,QAAQ,KAAMnB,EAAIc,SAAa,KAAEV,EAAG,IAAI,CAACO,YAAY,uBAAuB,CAACP,EAAG,OAAO,CAACO,YAAY,oBAAoB,CAACX,EAAIY,GAAG,WAAWR,EAAG,OAAO,CAACO,YAAY,qBAAqBX,EAAIoB,GAAIC,KAAKC,MAAMtB,EAAIc,SAASS,OAAO,SAASC,GAAK,OAAOpB,EAAG,SAAS,CAACqB,IAAID,EAAIP,MAAM,CAAC,KAAO,WAAW,CAACjB,EAAIY,GAAGZ,EAAIa,GAAGW,SAAU,KAAKxB,EAAI0B,KAAK1B,EAAI2B,GAAG,GAAI3B,EAAI4B,OAAS,EAAGxB,EAAG,OAAO,CAACO,YAAY,WAAW,CAACP,EAAG,IAAI,CAACO,YAAY,gBAAgB,CAACX,EAAIY,GAAG,IAAIZ,EAAIa,GAAGb,EAAI4B,YAAY5B,EAAI0B,KAAKtB,EAAG,UAAUA,EAAG,OAAO,CAACyB,YAAY,CAAC,cAAc,SAAS,CAAE7B,EAAI8B,OAAS,EAAG1B,EAAG,UAAU,CAACqB,IAAI,aAAaR,MAAM,CAAC,MAAQjB,EAAI+B,aAAa,IAAM,0BAA0B3B,EAAG,UAAU,CAACqB,IAAI,YAAYR,MAAM,CAAC,MAAQjB,EAAI+B,aAAa,IAAM,2BAA2B,IAAI,GAAG/B,EAAI0B,MAAqB,IAAf1B,EAAI8B,MAAc1B,EAAG,MAAM,CAACO,YAAY,sBAAsB,CAACP,EAAG,IAAI,CAACO,YAAY,gBAAgB,CAACX,EAAIY,GAAGZ,EAAIa,GAAGb,EAAI8B,UAAU1B,EAAG,IAAI,CAACO,YAAY,eAAe,CAACX,EAAIY,GAAG,YAAYZ,EAAI0B,KAAM1B,EAAIgC,aAAaC,OAAS,EAAGjC,EAAIoB,GAAIpB,EAAgB,cAAE,SAASkC,EAASC,GAAO,OAAO/B,EAAG,MAAM,CAACqB,IAAIU,EAAMxB,YAAY,gBAAgB,CAACP,EAAG,UAAU,CAACO,YAAY,YAAY,CAACP,EAAG,MAAM,CAACO,YAAY,eAAe,CAACP,EAAG,MAAM,CAACO,YAAY,oBAAoB,CAACX,EAAIY,GAAGZ,EAAIa,GAAGsB,EAAQ,MAAM/B,EAAG,MAAM,CAACO,YAAY,qBAAqB,CAACP,EAAG,OAAO,CAACO,YAAY,gBAAgBX,EAAIoB,GAAIC,KAAKC,MAAMY,EAASX,OAAO,SAASC,GAAK,OAAOpB,EAAG,SAAS,CAACqB,IAAID,EAAIP,MAAM,CAAC,KAAO,UAAU,CAACjB,EAAIY,GAAGZ,EAAIa,GAAGW,SAAU,OAAOpB,EAAG,MAAM,CAACO,YAAY,uBAAuB,CAACP,EAAG,KAAK,CAACO,YAAY,UAAU,CAACP,EAAG,OAAO,CAACO,YAAY,UAAU,CAACX,EAAIY,GAAG,IAAIZ,EAAIa,GAAqB,aAAlBqB,EAASE,KAAsB,MAAQ,OAAO,OAAOhC,EAAG,UAAU,CAACa,MAAM,CAAC,QAAUiB,EAASnB,UAAU,GAAsB,aAAlBmB,EAASE,KAAqB,CAAChC,EAAG,oBAAoB,CAACiC,MAAM,CAAC5B,MAAOT,EAAIsC,YAAYJ,EAASK,IAAKC,SAAS,SAAUC,GAAMzC,EAAI0C,KAAK1C,EAAIsC,YAAaJ,EAASK,GAAIE,IAAM/B,WAAW,6BAA6BV,EAAIoB,GAAIC,KAAKC,MAC9kFY,EAASS,UACV,SAASC,EAAOT,GAAO,OAAO/B,EAAG,cAAc,CAACqB,IAAIU,EAAMU,MAAM,CAC/D,oBAAqB7C,EAAI8C,qBACrBZ,EAASK,GACTJ,GAEJ,kBAAmBnC,EAAI+C,mBACnBb,EAASK,GACTJ,IAENlB,MAAM,CAAC,MAAQkB,EAAM,OAAS,GAAG,SAAWnC,EAAIgD,cAAc,CAAChD,EAAIY,GAAG,IAAIZ,EAAIa,GAAGoC,OAAOC,aAAa,GAAKf,IAAQ,MAAM/B,EAAG,UAAU,CAACa,MAAM,CAAC,QAAU2B,MAAW,MAAK,IAAI,CAACxC,EAAG,iBAAiB,CAACiC,MAAM,CAAC5B,MAAOT,EAAIsC,YAAYJ,EAASK,IAAKC,SAAS,SAAUC,GAAMzC,EAAI0C,KAAK1C,EAAIsC,YAAaJ,EAASK,GAAIE,IAAM/B,WAAW,6BAA6BV,EAAIoB,GAAIC,KAAKC,MACtWY,EAASS,UACV,SAASC,EAAOT,GAAO,OAAO/B,EAAG,WAAW,CAACqB,IAAIU,EAAMU,MAAM,CAC5D,oBAAqB7C,EAAI8C,qBACrBZ,EAASK,GACTJ,GAEJ,kBAAmBnC,EAAI+C,mBACnBb,EAASK,GACTJ,IAENlB,MAAM,CAAC,MAAQkB,EAAM,OAAS,GAAG,SAAWnC,EAAIgD,cAAc,CAAChD,EAAIY,GAAG,IAAIZ,EAAIa,GAAGoC,OAAOC,aAAa,GAAKf,IAAQ,MAAM/B,EAAG,UAAU,CAACa,MAAM,CAAC,QAAU2B,MAAW,MAAK,IAAIxC,EAAG,MAAM,CAACO,YAAY,UAAU,CAACP,EAAG,IAAI,CAACO,YAAY,2BAA2B,CAACP,EAAG,OAAO,CAACO,YAAY,eAAe,CAACX,EAAIY,GAAG,UAAUR,EAAG,OAAO,CAACO,YAAY,gBAAgB,CAACP,EAAG,UAAU,CAACa,MAAM,CAAC,KAAOjB,EAAImD,eAClXjB,EAASkB,cACX,OAAS,WAAW,CAACpD,EAAIY,GAAGZ,EAAIa,GAAGqB,EAASmB,gBAAgB,KAAKjD,EAAG,IAAI,CAACO,YAAY,6BAA6B,CAACP,EAAG,OAAO,CAACO,YAAY,eAAe,CAACX,EAAIY,GAAG,SAASR,EAAG,OAAO,CAACO,YAAY,gBAAgB,CAACP,EAAG,UAAU,CAACa,MAAM,CAAC,SAAW,GAAG,aAAa,WAAWoB,MAAM,CAAC5B,MAAOyB,EAAiB,SAAEM,SAAS,SAAUC,GAAMzC,EAAI0C,KAAKR,EAAU,WAAYO,IAAM/B,WAAW,wBAAwB,QAAQ,UAA8C4C,IAAxCtD,EAAIuD,mBAAmBrB,EAASK,IAAmBnC,EAAG,UAAU,CAACO,YAAY,mBAAmB,CAAmC,OAAjCX,EAAIsC,YAAYJ,EAASK,IAAcnC,EAAG,IAAI,CAACO,YAAY,qBAAqBkB,YAAY,CAAC,MAAQ,YAAY,CAAC7B,EAAIY,GAAG,WAAYZ,EAAIuD,mBAAmBrB,EAASK,IAAKnC,EAAG,IAAI,CAACO,YAAY,qBAAqBkB,YAAY,CAAC,MAAQ,YAAY,CAAC7B,EAAIY,GAAG,YAAYR,EAAG,IAAI,CAACO,YAAY,qBAAqBkB,YAAY,CAAC,MAAQ,YAAY,CAAC7B,EAAIY,GAAG,YAAYR,EAAG,IAAI,CAACO,YAAY,uBAAuB,CAACX,EAAIY,GAAG,SAASZ,EAAIa,GAAGb,EAAIwD,wBAAwBtB,EAASK,KAAK,OAAOnC,EAAG,IAAI,CAACO,YAAY,uBAAuB,CAACX,EAAIY,GAAG,SAASZ,EAAIa,GAAGb,EAAIyD,eAAevB,EAASK,IAAKmB,KAAI,SAAUC,GAAQ,OAAOV,OAAOC,aAAa,GAAKS,MAAWC,KAAK,KAAK,OAAOxD,EAAG,cAAcA,EAAG,IAAI,CAACyB,YAAY,CAAC,MAAQ,UAAU,YAAY,OAAO,cAAc,QAAQ,CAAC7B,EAAIY,GAAG,WAAWR,EAAG,UAAU,CAACa,MAAM,CAAC,QAAUjB,EAAI6D,OAAO3B,EAASK,QAAQ,GAAGvC,EAAI0B,MAAM,MAAK1B,EAAI0B,KAAKtB,EAAG,MAAM,CAACO,YAAY,mBAAmB,EAAGX,EAAIgD,cAAgBhD,EAAI8D,SAAW9D,EAAIgC,aAAaC,OAAS,EAAG7B,EAAG,YAAY,CAACa,MAAM,CAAC,KAAO,WAAW8C,GAAG,CAAC,MAAQ/D,EAAIgE,iBAAiB,CAAChE,EAAIY,GAAG,UAAUZ,EAAI0B,MAAM,GAAGtB,EAAG,MAAM,CAACO,YAAY,aAAa,CAAEX,EAAY,SAAEI,EAAG,YAAY,CAACa,MAAM,CAAC,KAAO,UAAU,MAAQ,GAAG,KAAO,QAAQ,KAAO,wBAAwB8C,GAAG,CAAC,MAAQ/D,EAAIiE,OAAO,CAACjE,EAAIY,GAAG,QAAQZ,EAAI0B,KAAM1B,EAAW,QAAEI,EAAG,YAAY,CAACa,MAAM,CAAC,KAAO,UAAU,MAAQ,GAAG,KAAO,QAAQ,KAAO,wBAAwB8C,GAAG,CAAC,MAAQ,SAASG,GAAQ,OAAOlE,EAAImE,MAAM,cAAc,CAACnE,EAAIY,GAAG,QAAQZ,EAAI0B,KAAM1B,EAAW,QAAEI,EAAG,YAAY,CAACa,MAAM,CAAC,KAAO,SAAS,MAAQ,GAAG,KAAO,QAAQ,KAAO,kBAAkB8C,GAAG,CAAC,MAAQ,SAASG,GAAQ,OAAOlE,EAAImE,MAAM,aAAa,CAACnE,EAAIY,GAAG,QAAQZ,EAAI0B,MAAM,IAAI,GAAGtB,EAAG,MAAM,CAACO,YAAY,kBAAkB,CAACP,EAAG,aAAa,CAACa,MAAM,CAAC,mBAAmB,SAAS,CAACjB,EAAIY,GAAG,QAAQR,EAAG,UAAU,CAACa,MAAM,CAAC,GAAKjB,EAAIuC,GAAG,SAAW,YAAY,MACz0E6B,EAAkB,CAAC,WAAa,IAAIpE,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,IAAI,CAACO,YAAY,sBAAsBkB,YAAY,CAAC,aAAa,SAAS,CAACzB,EAAG,OAAO,CAACO,YAAY,oBAAoB,CAACX,EAAIY,GAAG,WAAWR,EAAG,OAAO,CAACO,YAAY,qBAAqB,CAACX,EAAIY,GAAG,4B,4NCmR1S,GACE,KAAF,WACE,WAAF,CACI,QAAJ,OACI,QAAJ,QAEE,KANF,WAOI,MAAJ,CACM,QAAN,EACM,OAAN,EACM,SAAN,EACM,SAAN,CAAQ,MAAR,MACM,MAAN,EAAQ,MAAR,OAAQ,MAAR,aACM,YAAN,GAEM,cAAN,KAEM,cAAN,GACM,eAAN,GACM,aAAN,GACM,sBAAN,EACM,aAAN,EACM,gBAAN,GAEM,cAAN,EACM,OAAN,EACM,eAAN,GACM,mBAAN,GACM,OAAN,GACM,aAAN,KAEM,QAAN,6BACM,UAAN,KAGE,SAAF,CACI,kBADJ,WAEM,OAAN,mDAEI,gBAJJ,WAKM,OAAN,iDAEI,GAAJ,WACM,OAAN,uBAEI,SAAJ,WACM,OAAN,0CAGE,MAAF,GACE,QAlDF,WAoDA,+BACM,KAAN,aAEM,KAAN,cAGA,+BACM,OAAN,OAAM,CAAN,gCAGE,QAAF,CACI,WADJ,WAEA,oBACQ,KAAR,eAEQ,KAAR,uBAEQ,EAAR,kBAIQ,YAAR,WACU,EAAV,oBACA,OAGI,gBAhBJ,SAgBA,GAAM,IAAN,OACM,OAAN,OAAM,CAAN,4DACA,kBACQ,EAAR,iCAEA,mBACQ,QAAR,WAGI,YAzBJ,WAyBM,IAAN,OAWM,KAAN,eACM,IAAN,qBACA,IACQ,KAAR,qBAIM,KAAN,WAEM,EAAN,KACA,4DACA,kBACQ,EAAR,OAQQ,EAAR,YACQ,EAAR,yBAGQ,IAAR,OACQ,EAAR,2BACA,qBACY,EAAZ,YAGQ,EAAR,UACU,SAAV,WACU,OAAV,EACU,KAAV,OACU,WAAV,aACU,MAAV,QACU,KAAV,OACU,OAAV,aACU,SAAV,gBAGQ,EAAR,gCACQ,IAAR,uBAEA,KACQ,EAAR,qBACA,oBACY,EAAZ,SAEY,EAAZ,cAGQ,EAAR,cAEQ,EAAR,eACQ,EAAR,sCAEQ,EAAR,wBACA,iBACA,KAEQ,EAAR,cAUA,mBACQ,QAAR,UAEA,oBACQ,EAAR,eAGI,SAlHJ,WAkHM,IAAN,OACA,uDACM,GAAN,YACM,GAAN,QACM,OAAN,OAAM,CAAN,YACA,kBACA,cACU,EAAV,kBAGA,mBACQ,OAAR,QACU,KAAV,EAEY,EAAZ,sBACY,MACF,KAAV,KACY,EAAZ,8BAEY,EAAZ,kBAIY,YAAZ,WACc,EAAd,oBACA,KAEY,MACF,QAEE,EAAZ,0DAII,UApJJ,WAoJM,IAAN,OACA,uDACM,GAAN,YACM,GAAN,4BACM,OAAN,OAAM,CAAN,YACA,sBACA,mBACQ,OAAR,QACU,KAAV,EAEY,EAAZ,sBACY,MACF,KAAV,KACY,EAAZ,8BAEY,EAAZ,kBAIY,YAAZ,WACc,EAAd,oBACA,KAEY,MACF,QAEE,EAAZ,0DAII,eAlLJ,WAkLM,IAAN,OAEA,KACA,KAHA,WAMA,GAGQ,IAFA,IAAR,mBACA,KACA,gCACU,GAAV,yBACY,EAAZ,0BACY,MAIJ,EAAR,cAGA,SACU,GAAV,EACA,oBACA,aACY,GAAZ,EAEY,EAAZ,sBACc,OAAd,QAIU,EAAV,WAxBM,IAAN,0BAAQ,EAAR,GA6BA,EAuBQ,KAAR,eAtBQ,KAAR,SACA,uBACA,KACA,CACU,iBAAV,OACU,kBAAV,WACU,KAAV,YAGA,iBACA,0BACY,EAAZ,yBACc,KAAd,UAGY,EAAZ,qBAGA,kBACU,OAAV,MAQI,YAjPJ,SAiPA,GAAM,IAAN,iEACM,KAAN,SACA,oCACA,KACA,CACQ,iBAAR,OACQ,kBAAR,OACQ,KAAR,YAGA,iBACQ,EAAR,eACQ,EAAR,WACQ,IAAR,iBACA,YADA,uCAEA,SAFA,kBAIA,IACU,GAAV,UAEQ,OAAR,OAAQ,CAAR,eACA,kBACA,SACY,EAAZ,aACA,2BACY,EAAZ,yFACY,EAAZ,oBACY,OAAZ,cACY,EAAZ,gBAEY,EAAZ,eACA,OACc,EAAd,0BACA,OADA,YACA,YAKA,mBAEU,OADA,EAAV,eACA,QACY,KAAZ,EAEc,EAAd,sBACc,MACF,KAAZ,KACc,EAAd,8BAEc,EAAd,kBAIc,YAAd,WACgB,EAAhB,oBACA,KAEc,MACF,QAEE,EAAd,yDAGA,iBACU,EAAV,iBAGA,kBACQ,OAAR,MAKI,YAzTJ,WAyTM,IAAN,OACM,KAAN,WACM,IAAN,iBACA,YADA,uCAEA,YAFA,mBAIM,OAAN,OAAM,CAAN,YACA,kBAEQ,GAAR,qCAEU,IAAV,6BACA,KACA,KACA,KACU,EAAV,qBACY,EAAZ,mBACY,EAAZ,WACA,gBACA,iCACA,6BACY,EAAZ,kBAEU,EAAV,iBACU,EAAV,qBACU,EAAV,aAGA,mBACQ,OAAR,QACU,KAAV,EAEY,EAAZ,sBACY,MACF,KAAV,KACY,EAAZ,8BAEY,EAAZ,kBAIY,YAAZ,WACc,EAAd,oBACA,KAEY,MACF,QAEE,EAAZ,yDAGA,iBACQ,EAAR,eAGI,qBAhXJ,SAgXA,KACM,OAAN,2CACA,oCAKI,mBAvXJ,SAuXA,KACM,GAAN,4CAEA,oCACA,2BACA,CACU,GAAV,wBACY,OAAZ,EACA,yCACY,OAAZ,gCAIM,OAAN,GAEI,wBAtYJ,SAsYA,GACM,IAAN,sBACM,OAAN,SACA,MAEA,oBACA,EACA,iBACU,OAAV,6BAEA,SAEA,2BAGI,eArZJ,SAqZA,GACM,OAAN,4BAQI,MAAJ,YAAM,IAAN,OACA,YACQ,KAAR,qBACU,kBAAV,KACU,SAAV,YACA,cACc,OAAd,OAAc,CAAd,0BACgB,EAAhB,UACkB,QAAlB,mBACkB,KAAlB,YAEgB,SAAhB,eAMQ,OAAR,OAAQ,CAAR,6BACU,EAAV,UACY,QAAZ,mBACY,KAAZ,YAEU,SAAV,aAII,KAAJ,WACM,SAAN,yECnyB+Z,I,wBCQ3ZyD,EAAY,eACd,EACAtE,EACAqE,GACA,EACA,KACA,KACA,MAIa,aAAAC,E,gCCnBf,IAAIC,EAAS,EAAQ,QACjBC,EAAe,EAAQ,QACvBC,EAAU,EAAQ,QAClBC,EAA8B,EAAQ,QAE1C,IAAK,IAAIC,KAAmBH,EAAc,CACxC,IAAII,EAAaL,EAAOI,GACpBE,EAAsBD,GAAcA,EAAWE,UAEnD,GAAID,GAAuBA,EAAoBJ,UAAYA,EAAS,IAClEC,EAA4BG,EAAqB,UAAWJ,GAC5D,MAAOM,GACPF,EAAoBJ,QAAUA,K,oCCXlC,IAAIO,EAAW,EAAQ,QAAgCP,QACnDQ,EAAsB,EAAQ,QAC9BC,EAA0B,EAAQ,QAElCC,EAAgBF,EAAoB,WACpCG,EAAiBF,EAAwB,WAI7CG,EAAOC,QAAYH,GAAkBC,EAEjC,GAAGX,QAFgD,SAAiBc,GACtE,OAAOP,EAAS9E,KAAMqF,EAAYC,UAAUtD,OAAS,EAAIsD,UAAU,QAAKjC,K,kCCX1E,+GAOMkC,GALIC,IAAMC,OAAO,CACnBC,QAASC,cACTC,iBAAiB,IAGPJ,IAAMC,OAAO,CACvBG,iBAAiB,EACjBF,QAAiDG,gB,kCCRrD,IAAIC,EAAI,EAAQ,QACZvB,EAAU,EAAQ,QAItBuB,EAAE,CAAEC,OAAQ,QAASC,OAAO,EAAMC,OAAQ,GAAG1B,SAAWA,GAAW,CACjEA,QAASA,K,oCCPX,gGAGM2B,EAAML,YAAS,gBAErB,SAASM,EAAc7D,EAAI8D,GACvB,OAAOZ,OACFa,IAAIH,EAAM5D,EAAK,SAAU,GAAI,CAC1BgE,OAAQ,CACJF,OAAQA,GAEZR,iBAAiB,IAoB7B,SAASW,EAAWjE,EAAI8D,GACpB,OAAOZ,OACFa,IAAIH,EAAM,cAAgB5D,EAAK,OAAQ,GAAI,CACxCgE,OAAQ,CACJF,OAAQA,GAEZR,iBAAiB,M,oCCrC7B,W,kCCCA,IAAIE,EAAI,EAAQ,QACZU,EAAgB,EAAQ,QACxBC,EAAkB,EAAQ,QAC1B1B,EAAsB,EAAQ,QAE9B2B,EAAa,GAAG/C,KAEhBgD,EAAcH,GAAiBI,OAC/B3B,EAAgBF,EAAoB,OAAQ,KAIhDe,EAAE,CAAEC,OAAQ,QAASC,OAAO,EAAMC,OAAQU,IAAgB1B,GAAiB,CACzEtB,KAAM,SAAckD,GAClB,OAAOH,EAAWI,KAAKL,EAAgBzG,WAAqBqD,IAAdwD,EAA0B,IAAMA,O,kCCdlF,IAAIf,EAAI,EAAQ,QACZiB,EAAO,EAAQ,QAAgCtD,IAC/CuD,EAA+B,EAAQ,QACvChC,EAA0B,EAAQ,QAElCiC,EAAsBD,EAA6B,OAEnD9B,EAAiBF,EAAwB,OAK7Cc,EAAE,CAAEC,OAAQ,QAASC,OAAO,EAAMC,QAASgB,IAAwB/B,GAAkB,CACnFzB,IAAK,SAAa4B,GAChB,OAAO0B,EAAK/G,KAAMqF,EAAYC,UAAUtD,OAAS,EAAIsD,UAAU,QAAKjC,O,kCCfxE,uEAGawC,YAab,IAAMqB,EAAUrB,YAAS,mBAEzB,SAASsB,EAAShF,EAAKG,GACnB,OAAOkD,IAAM4B,IAAIF,EAAU/E,EAAO,IAAMG,EAAI,CACxCgE,OAAQ,CACJnE,KAAMA,EACN+E,QAAS,WAIRrB,a","file":"js/chunk-1e819061.d6276c63.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticClass:\"c-exam-take\"},[_c('div',{staticClass:\"c-exam-take-main\"},[_c('div',{staticClass:\"c-exam-take-title\"},[_c('h1',[_vm._v(\" 《\"+_vm._s(_vm.examInfo ? _vm.examInfo.title : \"试卷\")+\"》 \")])]),(_vm.examInfo)?_c('div',{staticClass:\"c-exam-take-attr\"},[_c('h3',[_vm._v(_vm._s(_vm.examInfo.desc))]),_c('p',{staticClass:\"c-exam-attr-content\"},[_c('span',{staticClass:\"c-exam-attr-prop\"},[_vm._v(\"出卷人：\")]),_c('span',{staticClass:\"c-exam-attr-value\"},[_c('el-link',{attrs:{\"href\":_vm.paperAuthorLink,\"target\":\"_blank\",\"underline\":false}},[_vm._v(\" \"+_vm._s(_vm.examInfo.author)+\" \")])],1)]),(_vm.examInfo.tags)?_c('p',{staticClass:\"c-exam-attr-content\"},[_c('span',{staticClass:\"c-exam-attr-prop\"},[_vm._v(\"试卷标签：\")]),_c('span',{staticClass:\"c-exam-attr-value\"},_vm._l((JSON.parse(_vm.examInfo.tags)),function(tag){return _c('el-tag',{key:tag,attrs:{\"size\":\"medium\"}},[_vm._v(_vm._s(tag))])}),1)]):_vm._e(),_vm._m(0),(_vm.views >= 0)?_c('span',{staticClass:\"u-views\"},[_c('i',{staticClass:\"el-icon-view\"},[_vm._v(\" \"+_vm._s(_vm.views))])]):_vm._e(),_c('QRcode'),_c('span',{staticStyle:{\"margin-left\":\"10px\"}},[(_vm.score >= 0)?_c('Sharing',{key:\"beforeTest\",attrs:{\"title\":_vm.sharingTitle,\"img\":\"./assets/img/100.svg\"}}):_c('Sharing',{key:\"afterTest\",attrs:{\"title\":_vm.sharingTitle,\"img\":\"./assets/img/100.svg\"}})],1)],1):_vm._e(),(_vm.score !== -1)?_c('div',{staticClass:\"c-exam-take-result\"},[_c('p',{staticClass:\"result-score\"},[_vm._v(_vm._s(_vm.score))]),_c('p',{staticClass:\"result-text\"},[_vm._v(\"本次得分\")])]):_vm._e(),(_vm.questionList.length > 0)?_vm._l((_vm.questionList),function(question,index){return _c('div',{key:index,staticClass:\"question-row\"},[_c('el-card',{staticClass:\"box-card\"},[_c('div',{staticClass:\"card-header\"},[_c('div',{staticClass:\"card-header-left\"},[_vm._v(_vm._s(index + 1))]),_c('div',{staticClass:\"card-header-right\"},[_c('span',{staticClass:\"q-attr-value\"},_vm._l((JSON.parse(question.tags)),function(tag){return _c('el-tag',{key:tag,attrs:{\"size\":\"small\"}},[_vm._v(_vm._s(tag))])}),1)])]),_c('div',{staticClass:\"c-exam-take-content\"},[_c('h3',{staticClass:\"q-text\"},[_c('span',{staticClass:\"q-hint\"},[_vm._v(\"[\"+_vm._s(question.type === \"checkbox\" ? \"多选题\" : \"单选题\")+\"]\")]),_c('Article',{attrs:{\"content\":question.title}})],1),(question.type === 'checkbox')?[_c('el-checkbox-group',{model:{value:(_vm.userAnswers[question.id]),callback:function ($$v) {_vm.$set(_vm.userAnswers, question.id, $$v)},expression:\"userAnswers[question.id]\"}},_vm._l((JSON.parse(\n                                        question.options\n                                    )),function(option,index){return _c('el-checkbox',{key:index,class:{\n                                        'is-correct-answer': _vm.isCorrectAnswerClass(\n                                            question.id,\n                                            index\n                                        ),\n                                        'is-wrong-answer': _vm.isWrongAnswerClass(\n                                            question.id,\n                                            index\n                                        ),\n                                    },attrs:{\"label\":index,\"border\":\"\",\"disabled\":_vm.isSubmitted}},[_vm._v(\" \"+_vm._s(String.fromCharCode(65 + index))+\". \"),_c('Article',{attrs:{\"content\":option}})],1)}),1)]:[_c('el-radio-group',{model:{value:(_vm.userAnswers[question.id]),callback:function ($$v) {_vm.$set(_vm.userAnswers, question.id, $$v)},expression:\"userAnswers[question.id]\"}},_vm._l((JSON.parse(\n                                        question.options\n                                    )),function(option,index){return _c('el-radio',{key:index,class:{\n                                        'is-correct-answer': _vm.isCorrectAnswerClass(\n                                            question.id,\n                                            index\n                                        ),\n                                        'is-wrong-answer': _vm.isWrongAnswerClass(\n                                            question.id,\n                                            index\n                                        ),\n                                    },attrs:{\"label\":index,\"border\":\"\",\"disabled\":_vm.isSubmitted}},[_vm._v(\" \"+_vm._s(String.fromCharCode(65 + index))+\". \"),_c('Article',{attrs:{\"content\":option}})],1)}),1)],_c('div',{staticClass:\"q-attr\"},[_c('p',{staticClass:\"q-attr-content u-author\"},[_c('span',{staticClass:\"q-attr-prop\"},[_vm._v(\"出题人：\")]),_c('span',{staticClass:\"q-attr-value\"},[_c('el-link',{attrs:{\"href\":_vm.getQAuthorLink(\n                                                question.createUserId\n                                            ),\"target\":\"_blank\"}},[_vm._v(_vm._s(question.createUser))])],1)]),_c('p',{staticClass:\"q-attr-content u-hardstar\"},[_c('span',{staticClass:\"q-attr-prop\"},[_vm._v(\"难度：\")]),_c('span',{staticClass:\"q-attr-value\"},[_c('el-rate',{attrs:{\"disabled\":\"\",\"text-color\":\"#ff9900\"},model:{value:(question.hardStar),callback:function ($$v) {_vm.$set(question, \"hardStar\", $$v)},expression:\"question.hardStar\"}})],1)])])],2)]),(_vm.eachCorrectiveness[question.id] !== undefined)?_c('el-card',{staticClass:\"box-card-result\"},[(_vm.userAnswers[question.id] === null)?_c('p',{staticClass:\"card-result-status\",staticStyle:{\"color\":\"#F12E2E\"}},[_vm._v(\" 未作答 \")]):(_vm.eachCorrectiveness[question.id])?_c('p',{staticClass:\"card-result-status\",staticStyle:{\"color\":\"#18CA4E\"}},[_vm._v(\" 回答正确 \")]):_c('p',{staticClass:\"card-result-status\",staticStyle:{\"color\":\"#F12E2E\"}},[_vm._v(\" 回答错误 \")]),_c('p',{staticClass:\"card-result-options\"},[_vm._v(\" 你的答案：\"+_vm._s(_vm.userAnswerDisplayString(question.id))+\" \")]),_c('p',{staticClass:\"card-result-options\"},[_vm._v(\" 正确答案：\"+_vm._s(_vm.correctAnswers[question.id] .map(function (each) { return String.fromCharCode(65 + each); }) .join(\"\"))+\" \")]),_c('el-divider'),_c('p',{staticStyle:{\"color\":\"#2682EA\",\"font-size\":\"20px\",\"font-weight\":\"800\"}},[_vm._v(\" 解析： \")]),_c('Article',{attrs:{\"content\":_vm.whyami[question.id]}})],1):_vm._e()],1)}):_vm._e(),_c('div',{staticClass:\"c-exam-take-btn\"},[(!_vm.isSubmitted && !_vm.loading && _vm.questionList.length > 0)?_c('el-button',{attrs:{\"type\":\"success\"},on:{\"click\":_vm.preSubmitPaper}},[_vm._v(\"提交试卷\")]):_vm._e()],1),_c('div',{staticClass:\"m-exam-op\"},[(_vm.isAuthor)?_c('el-button',{attrs:{\"type\":\"primary\",\"plain\":\"\",\"size\":\"small\",\"icon\":\"el-icon-edit-outline\"},on:{\"click\":_vm.edit}},[_vm._v(\"编辑\")]):_vm._e(),(_vm.isAdmin)?_c('el-button',{attrs:{\"type\":\"warning\",\"plain\":\"\",\"size\":\"small\",\"icon\":\"el-icon-circle-close\"},on:{\"click\":function($event){return _vm.check('restore')}}},[_vm._v(\"复审\")]):_vm._e(),(_vm.isAdmin)?_c('el-button',{attrs:{\"type\":\"danger\",\"plain\":\"\",\"size\":\"small\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){return _vm.check('delete')}}},[_vm._v(\"删除\")]):_vm._e()],1)],2),_c('div',{staticClass:\"m-exam-comment\"},[_c('el-divider',{attrs:{\"content-position\":\"left\"}},[_vm._v(\"讨论\")]),_c('Comment',{attrs:{\"id\":_vm.id,\"category\":\"paper\"}})],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"c-exam-attr-content\",staticStyle:{\"margin-top\":\"-8px\"}},[_c('span',{staticClass:\"c-exam-attr-prop\"},[_vm._v(\"总共题数：\")]),_c('span',{staticClass:\"c-exam-attr-value\"},[_vm._v(\"共10题，每题10分，满分100分。\")])])}]\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"c-exam-take\" v-loading=\"loading\">\n        <div class=\"c-exam-take-main\">\n            <div class=\"c-exam-take-title\">\n                <h1>\n                    《{{ examInfo ? examInfo.title : \"试卷\" }}》\n                    <!-- <i\n                        class=\"u-mark bg-magenta\"\n                        v-if=\"examInfo && examInfo.corner\"\n                    >{{examInfo.corner}}</i>-->\n                </h1>\n            </div>\n            <div class=\"c-exam-take-attr\" v-if=\"examInfo\">\n                <h3>{{ examInfo.desc }}</h3>\n                <p class=\"c-exam-attr-content\">\n                    <span class=\"c-exam-attr-prop\">出卷人：</span>\n                    <span class=\"c-exam-attr-value\">\n                        <el-link\n                            :href=\"paperAuthorLink\"\n                            target=\"_blank\"\n                            :underline=\"false\"\n                        >\n                            <!-- <el-avatar :src=\"paperAuthorAvatar\"></el-avatar> -->\n                            {{ examInfo.author }}\n                        </el-link>\n                    </span>\n                </p>\n                <p class=\"c-exam-attr-content\" v-if=\"examInfo.tags\">\n                    <span class=\"c-exam-attr-prop\">试卷标签：</span>\n                    <span class=\"c-exam-attr-value\">\n                        <el-tag\n                            size=\"medium\"\n                            v-for=\"tag of JSON.parse(examInfo.tags)\"\n                            :key=\"tag\"\n                            >{{ tag }}</el-tag\n                        >\n                    </span>\n                </p>\n                <p class=\"c-exam-attr-content\" style=\"margin-top: -8px;\">\n                    <span class=\"c-exam-attr-prop\">总共题数：</span>\n                    <!-- <span class=\"c-exam-attr-value\">{{questionIdList.length}}</span> -->\n                    <span class=\"c-exam-attr-value\"\n                        >共10题，每题10分，满分100分。</span\n                    >\n                </p>\n                <span class=\"u-views\" v-if=\"views >= 0\"\n                    ><i class=\"el-icon-view\">&nbsp;{{ views }}</i></span\n                >\n                <QRcode />\n                <span style=\"margin-left: 10px;\">\n                    <Sharing\n                        :title=\"sharingTitle\"\n                        img=\"./assets/img/100.svg\"\n                        v-if=\"score >= 0\"\n                        key=\"beforeTest\"\n                    />\n                    <Sharing\n                        :title=\"sharingTitle\"\n                        img=\"./assets/img/100.svg\"\n                        v-else\n                        key=\"afterTest\"\n                    />\n                </span>\n            </div>\n            <div class=\"c-exam-take-result\" v-if=\"score !== -1\">\n                <p class=\"result-score\">{{ score }}</p>\n                <p class=\"result-text\">本次得分</p>\n            </div>\n            <template v-if=\"questionList.length > 0\">\n                <div\n                    class=\"question-row\"\n                    v-for=\"(question, index) of questionList\"\n                    :key=\"index\"\n                >\n                    <el-card class=\"box-card\">\n                        <div class=\"card-header\">\n                            <div class=\"card-header-left\">{{ index + 1 }}</div>\n                            <div class=\"card-header-right\">\n                                <span class=\"q-attr-value\">\n                                    <el-tag\n                                        size=\"small\"\n                                        v-for=\"tag of JSON.parse(question.tags)\"\n                                        :key=\"tag\"\n                                        >{{ tag }}</el-tag\n                                    >\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"c-exam-take-content\">\n                            <h3 class=\"q-text\">\n                                <!-- <i\n                                v-if=\"eachCorrectiveness[question.id] !== undefined\"\n                                :class=\"{'el-icon-success': eachCorrectiveness[question.id], 'el-icon-error': !eachCorrectiveness[question.id]}\"\n                                ></i>-->\n                                <span class=\"q-hint\"\n                                    >[{{\n                                        question.type === \"checkbox\"\n                                            ? \"多选题\"\n                                            : \"单选题\"\n                                    }}]</span\n                                >\n                                <!-- {{ question.title }} -->\n                                <Article :content=\"question.title\"></Article>\n                            </h3>\n\n                            <template v-if=\"question.type === 'checkbox'\">\n                                <el-checkbox-group\n                                    v-model=\"userAnswers[question.id]\"\n                                >\n                                    <el-checkbox\n                                        v-for=\"(option, index) of JSON.parse(\n                                            question.options\n                                        )\"\n                                        :key=\"index\"\n                                        :label=\"index\"\n                                        border\n                                        :disabled=\"isSubmitted\"\n                                        :class=\"{\n                                            'is-correct-answer': isCorrectAnswerClass(\n                                                question.id,\n                                                index\n                                            ),\n                                            'is-wrong-answer': isWrongAnswerClass(\n                                                question.id,\n                                                index\n                                            ),\n                                        }\"\n                                    >\n                                        {{ String.fromCharCode(65 + index) }}.\n                                        <Article :content=\"option\"></Article>\n                                    </el-checkbox>\n                                </el-checkbox-group>\n                            </template>\n                            <template v-else>\n                                <el-radio-group\n                                    v-model=\"userAnswers[question.id]\"\n                                >\n                                    <el-radio\n                                        v-for=\"(option, index) of JSON.parse(\n                                            question.options\n                                        )\"\n                                        :key=\"index\"\n                                        :label=\"index\"\n                                        border\n                                        :disabled=\"isSubmitted\"\n                                        :class=\"{\n                                            'is-correct-answer': isCorrectAnswerClass(\n                                                question.id,\n                                                index\n                                            ),\n                                            'is-wrong-answer': isWrongAnswerClass(\n                                                question.id,\n                                                index\n                                            ),\n                                        }\"\n                                    >\n                                        {{ String.fromCharCode(65 + index) }}.\n                                        <Article :content=\"option\"></Article>\n                                    </el-radio>\n                                </el-radio-group>\n                            </template>\n\n                            <div class=\"q-attr\">\n                                <p class=\"q-attr-content u-author\">\n                                    <span class=\"q-attr-prop\">出题人：</span>\n                                    <span class=\"q-attr-value\">\n                                        <el-link\n                                            :href=\"\n                                                getQAuthorLink(\n                                                    question.createUserId\n                                                )\n                                            \"\n                                            target=\"_blank\"\n                                            >{{ question.createUser }}</el-link\n                                        >\n                                    </span>\n                                </p>\n\n                                <p class=\"q-attr-content u-hardstar\">\n                                    <span class=\"q-attr-prop\">难度：</span>\n                                    <span class=\"q-attr-value\">\n                                        <el-rate\n                                            v-model=\"question.hardStar\"\n                                            disabled\n                                            text-color=\"#ff9900\"\n                                        ></el-rate>\n                                    </span>\n                                </p>\n                            </div>\n                            <!-- \n                            <div class=\"q-whyami\" v-if=\"whyami[question.id] !== undefined\">\n                                <el-divider content-position=\"left\">解析</el-divider>\n                                <Article :content=\"whyami[question.id]\"></Article>\n                            </div>\n                            -->\n                        </div>\n                    </el-card>\n                    <el-card\n                        class=\"box-card-result\"\n                        v-if=\"eachCorrectiveness[question.id] !== undefined\"\n                    >\n                        <p\n                            class=\"card-result-status\"\n                            style=\"color: #F12E2E\"\n                            v-if=\"userAnswers[question.id] === null\"\n                        >\n                            未作答\n                        </p>\n                        <p\n                            class=\"card-result-status\"\n                            style=\"color: #18CA4E\"\n                            v-else-if=\"eachCorrectiveness[question.id]\"\n                        >\n                            回答正确\n                        </p>\n                        <p\n                            class=\"card-result-status\"\n                            style=\"color: #F12E2E\"\n                            v-else\n                        >\n                            回答错误\n                        </p>\n                        <p class=\"card-result-options\">\n                            你的答案：{{ userAnswerDisplayString(question.id) }}\n                        </p>\n                        <p class=\"card-result-options\">\n                            正确答案：{{\n                                correctAnswers[question.id]\n                                    .map((each) => {\n                                        return String.fromCharCode(65 + each);\n                                    })\n                                    .join(\"\")\n                            }}\n                        </p>\n                        <el-divider></el-divider>\n                        <p\n                            style=\"color: #2682EA; font-size: 20px; font-weight: 800;\"\n                        >\n                            解析：\n                        </p>\n                        <Article :content=\"whyami[question.id]\"></Article>\n                    </el-card>\n                </div>\n            </template>\n\n            <div class=\"c-exam-take-btn\">\n                <el-button\n                    type=\"success\"\n                    @click=\"preSubmitPaper\"\n                    v-if=\"!isSubmitted && !loading && questionList.length > 0\"\n                    >提交试卷</el-button\n                >\n            </div>\n\n            <div class=\"m-exam-op\">\n                <el-button v-if=\"isAuthor\"\n                    type=\"primary\"\n                    plain\n                    size=\"small\"\n                    icon=\"el-icon-edit-outline\"\n                    @click=\"edit\"\n                    >编辑</el-button\n                >\n                <el-button\n                    v-if=\"isAdmin\"\n                    type=\"warning\"\n                    plain\n                    size=\"small\"\n                    icon=\"el-icon-circle-close\"\n                    @click=\"check('restore')\"\n                    >复审</el-button\n                >\n                <el-button\n                    v-if=\"isAdmin\"\n                    type=\"danger\"\n                    plain\n                    size=\"small\"\n                    icon=\"el-icon-delete\"\n                    @click=\"check('delete')\"\n                    >删除</el-button\n                >\n            </div>\n        </div>\n        <div class=\"m-exam-comment\">\n            <el-divider content-position=\"left\">讨论</el-divider>\n            <Comment :id=\"id\" category=\"paper\" />\n        </div>\n    </div>\n</template>\n\n<script>\nimport { axios, realUrl } from \"@/service/api.js\";\nimport { __next } from \"@jx3box/jx3box-common/js/jx3box.json\";\nimport { JX3BOX, User } from \"@jx3box/jx3box-common\";\nimport { showAvatar, authorLink } from \"@jx3box/jx3box-common/js/utils\";\nimport Article from \"@jx3box/jx3box-editor/src/Article.vue\";\nimport { postStat } from \"@/service/stat.js\";\nimport Comment from \"@jx3box/jx3box-comment-ui/src/Comment.vue\";\nimport { checkPaper } from \"@/service/admin.js\";\nimport { $next } from \"@/service/axios.js\";\nexport default {\n    name: \"TakeExam\",\n    components: {\n        Comment,\n        Article,\n    },\n    data() {\n        return {\n            examid: -1,\n            views: -1,\n            loading: true,\n            examInfo: { title: \"试卷\" },\n            marks: [{ label: \"官方试卷\", value: \"official\" }],\n            userAnswers: {}, // 储存格式：{id: answer}\n            // isMultiple: false,\n            chosenOptions: null,\n            // currentQuestion: null, // 当前一道题的内容\n            questionCount: 10,\n            questionIdList: [],\n            questionList: [], // 所有题目的数组\n            currentQuestionNumber: 1, // 当前题目是第几题，从1开始\n            isSubmitted: false, // 判断是否已经提交试卷\n            authorAvatarUrl: \"\", // 这个url还没处理过\n\n            correctCount: -1,\n            score: -1,\n            correctAnswers: {},\n            eachCorrectiveness: {},\n            whyami: {},\n            sharingTitle: \"试卷\",\n\n            isAdmin: User.getInfo().group > 60,\n            author_id : ''\n        };\n    },\n    computed: {\n        paperAuthorAvatar() {\n            return showAvatar(this.authorAvatarUrl, \"s\");\n        },\n        paperAuthorLink() {\n            return authorLink(this.examInfo.authorId);\n        },\n        id: function() {\n            return this.$route.params.id;\n        },\n        isAuthor : function (){\n            return User.getInfo().uid == this.author_id\n        }\n    },\n    watch: {},\n    mounted() {\n        // // 先判断是否登录\n        if (location.hostname != \"localhost\"){\n            this.checkLogin();\n        }else{\n            this.getExamInfo();\n        }\n        // this.getSolution()\n        if (this.$route.name == \"exam-take\") {\n            postStat(\"paper\", this.$route.params.id);\n        }\n    },\n    methods: {\n        checkLogin() {\n            if (User.isLogin()) {\n                this.getExamInfo();\n            } else {\n                this.$message.error(\"请先登录\");\n                //1.注销\n                User.destroy();\n                //2.保存未提交成功的信息\n                //请保存至IndexedDB,勿占用localstorage\n                //3.跳转至登录页携带redirect\n                setTimeout(() => {\n                    User.toLogin();\n                }, 1000);\n            }\n        },\n        getAuthorAvatar(uid) {\n            axios(`https://server.jx3box.com/user/info?uid=${uid}`, \"GET\")\n                .then((response) => {\n                    this.authorAvatarUrl = response.data.avatar;\n                })\n                .catch((e) => {\n                    console.log(e);\n                });\n        },\n        getExamInfo() {\n            // if (this.id) {\n                \n            // } else {\n            //     this.$message.error(\"试卷不存在！\");\n            //     setTimeout(() => {\n            //         this.$router.replace(\"/list\");\n            //     }, 2000);\n            //     return false;\n            // }\n\n            this.examid = this.id;\n            let params = this.$route.params;\n            if (params) {\n                this.examInfo = params.examInfo;\n            }\n\n            // 获取试卷信息\n            this.loading = true;\n\n            $next\n                .get(\"api/question/user-exam-paper/\" + this.examid + \"?details\")\n                .then((response) => {\n                    response = response.data\n                    // if (!response.id) {\n                    //     this.$message.error(\"试卷不存在！\");\n                    //     setTimeout(() => {\n                    //         this.$router.replace(\"/list\");\n                    //     }, 1000);\n                    //     return false;\n                    // }\n                    this.examid = response.id;\n                    this.author_id = response.createUserId\n\n                    // 获取角标的中文\n                    let tmpMark = null;\n                    this.marks.forEach((mark) => {\n                        if (mark.value === response.corner) {\n                            tmpMark = mark.label;\n                        }\n                    });\n                    this.examInfo = {\n                        category: response.category,\n                        corner: tmpMark,\n                        desc: response.desc,\n                        medalAward: response.medalAward,\n                        title: response.title,\n                        tags: response.tags,\n                        author: response.createUser,\n                        authorId: response.createUserId,\n                    };\n                    // this.getAuthorAvatar(response.createUserId);\n                    this.questionIdList = response.questionIdList;\n                    let questions = response.questionDetailList;\n\n                    let tmpUserAnswers = {};\n                    questions.forEach((question) => {\n                        if (question.type === \"checkbox\") {\n                            tmpUserAnswers[question.id] = [];\n                        } else {\n                            tmpUserAnswers[question.id] = null;\n                        }\n                    });\n                    this.userAnswers = tmpUserAnswers;\n\n                    this.questionList = questions;\n                    this.questionCount = this.questionIdList.length;\n\n                    this.sharingTitle = this.examInfo\n                        ? this.examInfo.title\n                        : \"试卷\";\n\n                    this.getStats();\n\n                    // // this.currentQuestionNumber = 1;\n                    // if (this.questionList[0].type === \"checkbox\") {\n                    //     this.chosenOptions = [];\n                    // } else {\n                    //     this.chosenOptions = null;\n                    // }\n                    // this.loadQuestion();\n                })\n                .catch((e) => {\n                    console.log(e)\n                })\n                .finally(() => {\n                    this.loading = false;\n                });\n        },\n        getStats() {\n            let getStatsUrl = realUrl(__next, \"api/summary-any/paper-\");\n            getStatsUrl += this.examid;\n            getStatsUrl += \"/stat\";\n            axios(getStatsUrl, \"GET\", true)\n                .then((response) => {\n                    if (\"views\" in response) {\n                        this.views = response.views;\n                    }\n                })\n                .catch((e) => {\n                    switch (e.code) {\n                        case -1:\n                            // 网络异常\n                            this.$message.error(e.msg);\n                            break;\n                        case 9999:\n                            this.$message.error(\"登录失效, 请重新登录\");\n                            //1.注销\n                            User.destroy();\n                            //2.保存未提交成功的信息\n                            //请保存至IndexedDB,勿占用localstorage\n                            //3.跳转至登录页携带redirect\n                            setTimeout(() => {\n                                User.toLogin();\n                            }, 1000);\n                            //不指定url时则自动跳回当前所在页面\n                            break;\n                        default:\n                            // 服务器错误\n                            this.$message.error(`[${e.code}]${e.msg}`);\n                    }\n                });\n        },\n        postStats() {\n            let postStatsUrl = realUrl(__next, \"api/summary-any/paper-\");\n            postStatsUrl += this.examid;\n            postStatsUrl += \"?type=paper&actions=views\";\n            axios(postStatsUrl, \"GET\", true)\n                .then((response) => {})\n                .catch((e) => {\n                    switch (e.code) {\n                        case -1:\n                            // 网络异常\n                            this.$message.error(e.msg);\n                            break;\n                        case 9999:\n                            this.$message.error(\"登录失效, 请重新登录\");\n                            //1.注销\n                            User.destroy();\n                            //2.保存未提交成功的信息\n                            //请保存至IndexedDB,勿占用localstorage\n                            //3.跳转至登录页携带redirect\n                            setTimeout(() => {\n                                User.toLogin();\n                            }, 1000);\n                            //不指定url时则自动跳回当前所在页面\n                            break;\n                        default:\n                            // 服务器错误\n                            this.$message.error(`[${e.code}]${e.msg}`);\n                    }\n                });\n        },\n        preSubmitPaper() {\n            // 提交试卷前的检查\n            let finalAnswers = {};\n            let isFinished = true;\n\n            // 拼接最终答案\n            for (let key in this.userAnswers) {\n                let value = this.userAnswers[key];\n                let options = [];\n                for (let i = 0; i < this.questionList.length; ++i) {\n                    if (this.questionList[i].id == key) {\n                        options = this.questionList[i].options;\n                        break;\n                    }\n                }\n\n                options = JSON.parse(options);\n\n                // 判断是否有空的题目\n                if (value === null) {\n                    isFinished = false;\n                } else if (typeof value !== \"number\") {\n                    if (value.length === 0) {\n                        isFinished = false;\n                    } else {\n                        finalAnswers[key] = value.map((optionIndex) => {\n                            return options[optionIndex];\n                        });\n                    }\n                } else {\n                    finalAnswers[key] = [options[value]];\n                }\n            }\n\n            // 如果有空的题目，提示是否要直接提交。但是不允许提交空白试卷\n            if (!isFinished) {\n                this.$confirm(\n                    \"还没有完成所有题目的作答，是否继续答题？\",\n                    \"提示\",\n                    {\n                        cancelButtonText: \"继续答题\",\n                        confirmButtonText: \"不管了，我要交卷\",\n                        type: \"warning\",\n                    }\n                )\n                    .then(() => {\n                        if (Object.keys(finalAnswers).length === 0) {\n                            this.$alert(\"不能交白卷哦~\", \"提交失败\", {\n                                type: \"error\",\n                            });\n                        } else {\n                            this.submitPaper(finalAnswers, true);\n                        }\n                    })\n                    .catch(() => {\n                        return false;\n                    });\n            } else {\n                this.submitPaper(finalAnswers);\n            }\n        },\n\n        // 执行提交试卷请求\n        submitPaper(answers, force = false) {\n            this.$confirm(\n                \"提交试卷后将无法再修改作答，且每套试卷只能作答一次。是否确定提交？\",\n                \"提示\",\n                {\n                    cancelButtonText: \"我再看看\",\n                    confirmButtonText: \"确定提交\",\n                    type: \"warning\",\n                }\n            )\n                .then(() => {\n                    this.isSubmitted = true;\n                    this.loading = true;\n                    let postUrl = realUrl(\n                        __next,\n                        `api/question/user-exam-paper/${this.examid}/i-finish-all`\n                    );\n                    if (force) {\n                        postUrl += \"?force\";\n                    }\n                    axios(postUrl, \"POST\", true, answers)\n                        .then((response) => {\n                            if (response.score) {\n                                this.correctCount =\n                                    response.score.questionRightCount;\n                                this.sharingTitle = `我在${this.examInfo.title}中取得了${response.score.score}分的好成绩，你也快来试试吧！`;\n                                this.score = response.score.score;\n                                window.scrollTo(0, 0);\n                                this.getSolution();\n                            } else {\n                                this.isSubmitted = false;\n                                if (response.msg) {\n                                    this.$message.error(\n                                        `[${response.code}]${response.msg}`\n                                    );\n                                }\n                            }\n                        })\n                        .catch((e) => {\n                            this.isSubmitted = false;\n                            switch (e.code) {\n                                case -1:\n                                    // 网络异常\n                                    this.$message.error(e.msg);\n                                    break;\n                                case 9999:\n                                    this.$message.error(\"登录失效, 请重新登录\");\n                                    //1.注销\n                                    User.destroy();\n                                    //2.保存未提交成功的信息\n                                    //请保存至IndexedDB,勿占用localstorage\n                                    //3.跳转至登录页携带redirect\n                                    setTimeout(() => {\n                                        User.toLogin();\n                                    }, 1000);\n                                    //不指定url时则自动跳回当前所在页面\n                                    break;\n                                default:\n                                    // 服务器错误\n                                    this.$message.error(`[${e.code}]${e.msg}`);\n                            }\n                        })\n                        .then(() => {\n                            this.loading = false;\n                        });\n                })\n                .catch(() => {\n                    return false;\n                });\n        },\n\n        // 获取试卷答案\n        getSolution() {\n            this.loading = true;\n            let solutionUrl = realUrl(\n                __next,\n                `api/question/user-exam-paper/${this.examid}/i-need-answer`\n            );\n            axios(solutionUrl, \"GET\", true)\n                .then((response) => {\n                    // console.log(response);\n                    if (response.paper && response.paper.questionDetailList) {\n                        // 展示答案，是否正确，已经给选项标上是否正确的标记\n                        let qda = response.paper.questionDetailList;\n                        let tmpAnswerList = {};\n                        let tmpCorrectiveness = {};\n                        let tmpWhyami = {};\n                        qda.forEach((question) => {\n                            tmpAnswerList[question.id] = question.answerList;\n                            tmpCorrectiveness[question.id] =\n                                question.myAnswer !== undefined &&\n                                question.answerList.sort().toString() ===\n                                    question.myAnswer.sort().toString();\n                            tmpWhyami[question.id] = question.whyami;\n                        });\n                        this.correctAnswers = tmpAnswerList;\n                        this.eachCorrectiveness = tmpCorrectiveness;\n                        this.whyami = tmpWhyami;\n                    }\n                })\n                .catch((e) => {\n                    switch (e.code) {\n                        case -1:\n                            // 网络异常\n                            this.$message.error(e.msg);\n                            break;\n                        case 9999:\n                            this.$message.error(\"登录失效, 请重新登录\");\n                            //1.注销\n                            User.destroy();\n                            //2.保存未提交成功的信息\n                            //请保存至IndexedDB,勿占用localstorage\n                            //3.跳转至登录页携带redirect\n                            setTimeout(() => {\n                                User.toLogin();\n                            }, 1000);\n                            //不指定url时则自动跳回当前所在页面\n                            break;\n                        default:\n                            // 服务器错误\n                            this.$message.error(`[${e.code}]${e.msg}`);\n                    }\n                })\n                .then(() => {\n                    this.loading = false;\n                });\n        },\n        isCorrectAnswerClass(qid, idx) {\n            if (Object.keys(this.correctAnswers).length > 0) {\n                return this.correctAnswers[qid].includes(idx);\n            } else {\n                return false;\n            }\n        },\n        isWrongAnswerClass(qid, idx) {\n            if (Object.keys(this.correctAnswers).length > 0) {\n                if (\n                    !this.correctAnswers[qid].includes(idx) &&\n                    this.userAnswers[qid] !== null\n                ) {\n                    if (this.userAnswers[qid] === idx) {\n                        return true;\n                    } else if (typeof this.userAnswers[qid] !== \"number\") {\n                        return this.userAnswers[qid].includes(idx);\n                    }\n                }\n            }\n            return false;\n        },\n        userAnswerDisplayString(qid) {\n            let ans = this.userAnswers[qid];\n            if (ans === null) {\n                return \"未作答\";\n            }\n            if (typeof ans !== \"number\") {\n                return ans\n                    .map((each) => {\n                        return String.fromCharCode(65 + each);\n                    })\n                    .join(\"\");\n            } else {\n                return String.fromCharCode(65 + ans);\n            }\n        },\n        getQAuthorLink(aid) {\n            return authorLink(aid);\n        },\n\n        // // 改变题目时，保存并读取用户已经选择的选项\n        // loadQuestionUserAnswer() {\n\n        // }\n\n        check: function(action) {\n            if (action == \"delete\") {\n                this.$alert(\"确定删除吗\", \"消息\", {\n                    confirmButtonText: \"确定\",\n                    callback: (pop) => {\n                        if (pop == \"confirm\") {\n                            checkPaper(this.id, action).then((res) => {\n                                this.$message({\n                                    message: res.data.msg || \"操作成功\",\n                                    type: \"success\",\n                                });\n                                location.reload();\n                            });\n                        }\n                    },\n                });\n            } else {\n                checkPaper(this.id, action).then((res) => {\n                    this.$message({\n                        message: res.data.msg || \"操作成功\",\n                        type: \"success\",\n                    });\n                    location.reload();\n                });\n            }\n        },\n        edit: function() {\n            location.href = 'https://www.jx3box.com/dashboard/publish/#/exam/paper/' + this.id\n        },\n    },\n};\n</script>\n\n<style lang=\"less\">\n@import \"../../assets/css/takeexam.less\";\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../node_modules/vue-svg-inline-loader/dist/index.min.js!./TakeExam.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../node_modules/vue-svg-inline-loader/dist/index.min.js!./TakeExam.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TakeExam.vue?vue&type=template&id=10115736&\"\nimport script from \"./TakeExam.vue?vue&type=script&lang=js&\"\nexport * from \"./TakeExam.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TakeExam.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar forEach = require('../internals/array-for-each');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  // some Chrome versions have non-configurable methods on DOMTokenList\n  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {\n    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);\n  } catch (error) {\n    CollectionPrototype.forEach = forEach;\n  }\n}\n","'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('forEach');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('forEach');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.github.io/ecma262/#sec-array.prototype.foreach\nmodule.exports = (!STRICT_METHOD || !USES_TO_LENGTH) ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n} : [].forEach;\n","import axios from \"axios\";\nimport { __server, __next } from \"@jx3box/jx3box-common/js/jx3box.json\";\nconst $ = axios.create({\n    baseURL: __server,\n    withCredentials: true,\n});\n\nconst $next = axios.create({\n    withCredentials: true,\n    baseURL: process.env.NODE_ENV === \"production\" ? __next : \"/\",\n});\n\nexport { $, axios, $next };\n","'use strict';\nvar $ = require('../internals/export');\nvar forEach = require('../internals/array-for-each');\n\n// `Array.prototype.forEach` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n$({ target: 'Array', proto: true, forced: [].forEach != forEach }, {\n  forEach: forEach\n});\n","import { axios } from \"./axios\";\nimport { __next } from \"@jx3box/jx3box-common/js/jx3box.json\";\n\nconst API = __next + 'api/question/'  //TODO:\n// const API = \"/api/question/\";\nfunction checkQuestion(id, action) {\n    return axios\n        .put(API + id + \"/check\", \"\", {\n            params: {\n                action: action,\n            },\n            withCredentials: true,\n        })\n}\n\nfunction getQuestions(query) {\n    return axios\n        .get(API + \"list\", {\n            params: query,\n            withCredentials: true,\n        })\n}\n\nfunction getPapers(query) {\n    return axios\n        .get(API + \"exam-paper\", {\n            params: query,\n            withCredentials: true,\n        })\n}\n\nfunction checkPaper(id, action) {\n    return axios\n        .put(API + \"exam-paper/\" + id + \"/opt\", \"\", {\n            params: {\n                action: action,\n            },\n            withCredentials: true,\n        })\n}\n\nexport { checkQuestion, getQuestions, getPapers,checkPaper };\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/style-resources-loader/lib/index.js??ref--10-oneOf-1-4!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../node_modules/vue-svg-inline-loader/dist/index.min.js!./TakeExam.vue?vue&type=style&index=0&lang=less&\"","'use strict';\nvar $ = require('../internals/export');\nvar IndexedObject = require('../internals/indexed-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar nativeJoin = [].join;\n\nvar ES3_STRINGS = IndexedObject != Object;\nvar STRICT_METHOD = arrayMethodIsStrict('join', ',');\n\n// `Array.prototype.join` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.join\n$({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {\n  join: function join(separator) {\n    return nativeJoin.call(toIndexedObject(this), separator === undefined ? ',' : separator);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n// FF49- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('map');\n\n// `Array.prototype.map` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","import axios from \"axios\";\nimport { __next } from \"@jx3box/jx3box-common/js/jx3box.json\";\n\nconst stat = __next + \"api/summary-any/\";\n// const stat = \"/api/summary-any/\";\nfunction getStat(type,id) {\n    return axios\n        .get(stat + type + '-' + id + \"/stat\")\n        .then((res) => {\n            return res.data;\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n}\n\nconst actions = __next + \"api/summary-any/\";\n// const actions = \"/api/summary-any/\";\nfunction postStat(type,id) {\n    return axios.get(actions + type + '-' + id, {\n        params: {\n            type: type,\n            actions: \"views\",\n        },\n    });\n}\nconst rank = __next + 'api/summary/visit/rank'\n// const rank = \"/api/summary/visit/rank\";\nfunction getRank(type) {\n    return axios.get(rank,{\n        params : {\n            postType : type,\n            postAction : 'views',\n            pageSize : 10\n        }\n    });\n}\n\nexport { getStat, postStat, getRank };\n"],"sourceRoot":""}